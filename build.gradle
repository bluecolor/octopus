buildscript {
	ext {
		springBootVersion = '1.4.1.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'
apply plugin: 'scala'

def _versionCode=0
def _major=0
def _minor=0
def _patch=0
def _applicationId = "io.bluecolor.octopus"
def versionPropsFile = file('version.properties')

if (versionPropsFile.canRead()) {
    def Properties versionProps = new Properties()

    versionProps.load(new FileInputStream(versionPropsFile))

    _patch = versionProps['PATCH'].toInteger() + 1
    _major = versionProps['MAJOR'].toInteger()
    _minor = versionProps['MINOR'].toInteger() 
    _versionCode= versionProps['VERSION_CODE'].toInteger()+1
    if(_patch==99)
    {
        _patch=0
        _minor=_minor+1
    }
    if(_major==99){
        _major=0
        _major=_major+1
    }

    versionProps['MAJOR']=_major.toString()
    versionProps['MINOR']=_minor.toString()
    versionProps['PATCH']=_patch.toString()
    versionProps['VERSION_CODE']=_versionCode.toString()
    versionProps.store(versionPropsFile.newWriter(), null)
}
else {
    throw new GradleException("Could not read version.properties!")
}
def _versionName = "${_major}.${_versionCode}.${_minor}.${_patch}"


jar {
	baseName = 'octopus'
	version = "${_versionName}"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

bootRun {
    addResources = true
}

dependencies {

  // compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'

	compile "org.springframework.boot:spring-boot-devtools"	

  compile group: 'com.hierynomus', name: 'sshj', version: '0.21.1'


	compile 'org.scala-lang:scala-library'
	// runtime files('lib/ojdbc6.jar')
	// compile group: 'postgresql', name: 'postgresql', version: '9.3-1102.jdbc4'

  compile group: 'com.h2database', name: 'h2'


  compile group: 'org.hsqldb', name: 'hsqldb', version: '2.4.0'
	
  // built in drivers
  compile group: 'org.postgresql', name: 'postgresql', version: '42.0.0'


  compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.5'
	compile group: 'org.apache.commons', name: 'commons-io', version: '1.3.2'

  compile group: 'com.typesafe.akka', name: 'akka-actor_2.11', version: '2.4.17'
  compile group: 'com.typesafe.akka', name: 'akka-slf4j_2.11', version: '2.4.17'
  compile group: 'org.quartz-scheduler', name: 'quartz', version: '2.2.3'

  compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-hibernate5', version: '2.8.8'
  compile group: 'com.fasterxml.jackson.module', name: 'jackson-module-scala_2.10', version: '2.8.8'

  testCompile group: 'org.hibernate.validator', name: 'hibernate-validator', version: '6.0.0.Beta2'

  compile('org.springframework.boot:spring-boot-starter-websocket')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-web')
  testCompile('org.springframework.boot:spring-boot-starter-test')
  compile("org.webjars:webjars-locator")
  
  compile("org.webjars:sockjs-client:1.0.2")
  compile("org.webjars:stomp-websocket:2.3.3")
    
  compile group: 'org.springframework', name: 'spring-context-support', version: '4.3.8.RELEASE'


  compile("org.springframework.boot:spring-boot-starter-thymeleaf")

  compile group: 'org.springframework.boot', name: 'spring-boot-starter-remote-shell', version: '1.5.1.RELEASE'

  compile("com.vladmihalcea.flexy-pool:flexy-pool-core:1.2.9")
  compile group: 'com.github.gavlyukovskiy', name: 'flexy-pool-spring-boot-starter', version: '1.2.1'


}
